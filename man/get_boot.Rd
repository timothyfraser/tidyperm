% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_boot.R
\name{get_boot}
\alias{get_boot}
\title{get_boot() Node Bootstrap for Networks}
\source{
\url{https://github.com/cran/snowboot/blob/master/src/vertboot_matrix_rcpp.cpp}

Snijders, Tom A.B., and Borgatti, Stephen P. (1999). Non-Parametric Standard Errors and Tests for Network Statistics. Connections 22(2), 61-70.
}
\usage{
get_boot(m, matrix, i)
}
\arguments{
\item{m}{observed model}

\item{matrix}{Adjacency matrix (usually as outcome variable)}

\item{i}{counter of replicates, returned as replicate id.}
}
\description{
This function implements the network (node) bootstrap algorithm from Snijders and Borgatti (1999),
adapting the snowboot package's Rccp code to work for any supplied set of bootstrapped nodes.
}
\details{
\code{\link[=get_boot]{get_boot()}} serves as a wrapper function for \code{\link[=netboot]{netboot()}}, allowing you to run \code{\link[=netboot]{netboot()}} \emph{i} many times while extracting quantities of interest.
}
\examples{

# Load Packages
library(tidyperm)
library(igraph)
library(tidygraph)

# Import pokemon network
data("pokemon")

pokemon <- pokemon \%>\%
  # Get matrix of 151 first-gen nodes
  filter(generation == 1) \%>\%
  # Average damage inflicted on recipients by this Pokemon
  mutate(damage_mean = centrality_degree(
         weights = .E()$damage, loops = TRUE, mode = "in") / n())

# Get adjacency matrix a
a <- pokemon \%>\%
  # To extract the matrix
  as.igraph() \%>\%
  # Extract directed matrix, with edges weight by damage.
  as_adjacency_matrix(type = "both", attr = "damage", edges = FALSE, names = TRUE, sparse = FALSE)

# Estimate model m
m <- pokemon \%>\%
 # Extract nodes and convert to tibble
 activate("nodes") \%>\% as_tibble() \%>\%
 # Model dataframe!
 lm(formula = damage_mean ~ base_total + capture_rate + legendary + dragon)

# For ten times (i),
1:10 \%>\%
 # run node bootstrap on matrix a and model m
   map_dfr(~get_boot(m, a, i = .), .id = "replicate")


}
